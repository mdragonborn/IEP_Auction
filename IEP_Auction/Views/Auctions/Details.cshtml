@model IEP_Auction.Models.DetailsModel

@{
    ViewBag.Title = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Details</h2>

<div>
    <h4>Auction</h4>
    <hr />
    <div id="alert-placeholder"></div>
    <p>
        @if (User.IsInRole("Admin")) {
            @Html.ActionLink("Edit", "Edit", new { id = Model.Auction.Id })
        }
        | @Html.ActionLink("Back to List", "Index") | 
        @if (Model.Auction.Status == "OPENED" && Model.Auction.TimeEnd > DateTime.Now) {
            @Html.ActionLink("Bid", "Bid", new { guid = Model.Auction.Id })
        }
    </p>
    <dl class="dl-horizontal">
                <dt>
            Item name
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Auction.Name)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Auction.Description)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Auction.Description)
        </dd>
        <dt>
        </dt>
        <dd>
            <img src=@Html.DisplayFor(model => model.Auction.ImagePath) height="100px">
        </dd>
        <dt>
            Auction creator
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Auction.AspNetUser.Email)
        </dd>
        <dt>
            Status
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Auction.Status)
        </dd>
        <dt>
            Current price
        </dt>
        <dd>
            @Html.DisplayFor(model=>model.Auction.Bid.Amount)
        </dd>
        @if (Model.Auction.Status == "READY")
        {
            <dt>Auction Length (minutes)</dt>
            <dd>@Html.DisplayFor(model => model.Auction.DurationMinutes)</dd>
        }
        else
        {
        <dt>
            Current bidder
        </dt>
                if (Model.Auction.Bid.AspNetUser.Id != Model.Auction.CreatorId)
                {
                <dd>@Html.DisplayFor(model => model.Auction.Bid.AspNetUser.Email)</dd>
                }
                else { <dd>None</dd> }

        <dt>
            Start time
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Auction.TimeStart)
        </dd>

        <dt>
            End time
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Auction.TimeEnd)
        </dd>
        }

    </dl>

    <h3>Bids</h3>
    <div id="bidContainer">
        @foreach (var bid in Model.Bids)
        {
            <div class="alert" role="alert" style="margin-bottom:0; padding:5px">
                @Html.DisplayFor(bidItem => bid.Bid.Time)
               : Bid by 
                <strong>
                @Html.DisplayFor(bidItem => bid.Bid.AspNetUser.Email)
                </strong>
                for amount 
                <strong>
                    @Html.DisplayFor(bidItem => bid.Bid.Amount)
                </strong>
        </div>
        }
    </div>

    <span id="guid" data="@(ViewBag.guid)" type="hidden"></span>

    @section Scripts{
        <script src="~/Scripts/jquery.signalR-2.4.0.js"></script>
        <script src="~/SignalR/Hubs"></script>
        <script type="text/javascript">
            function htmlEncode(value) {
                return $('<div />').text(value).html();
            }

            //execute on document ready
            $(function () {
                $.connection.hub.start()
        .done(function () {
            console.log('Now connected, connection ID=' + $.connection.hub.id);
            $.connection.notificationHub.server.joinGroup(document.getElementById("guid").getAttribute("data"));
        })
        .fail(function () { console.log('Could not Connect!'); });


                //function that the hub can call when it receives a notification.
                $.connection.notificationHub.client.newBid = function (update, alertType) {
                    //Create the bootstrap alert html
                    var jsonUpdate = JSON.parse(update);
                    var alertHtml = '<div class="alert" role="alert" style="margin-bottom:0; padding:5px">'
                        + htmlEncode(jsonUpdate.time)
                        + ' : Bid by <strong>'
                        + htmlEncode(jsonUpdate.user)
                        + '</strong> for amount <strong>'
                        + htmlEncode(jsonUpdate.price)
                        + '</strong></div>';
                    $(alertHtml)
                      .hide() //hide the newly created element (this is required for fadeIn to work)
                      .prependTo('#bidContainer')   //add it to the palceholder in the page
                      .fadeIn(500);                     //little flair to grab user attention
                };

                window.notifyApp = {
                    hubConnector: $.connection.hub.start()  //start the connection and store object returned globally for access in child views
                };

            });
            $(window).unload(function () {
                $.connection.notificationHub.server.removeGroup(document.getElementById("guid").getAttribute("data"));
            })
        </script>
        }
</div>